
@using Const
@using MamasRezepte.Shared.Models
@using MamasRezepte.Client.State
@using MamasRezepte.Client.Helper 

@inject DataStateMain State 
@inject BrowserService BrowserService

@*<div class="row" data-masonry='{"percentPosition": true}'>

    @foreach (var hElement in FElements)
    {
        <div class="col-sm-6 col-lg-4 mb-4">
        
            <RecipeCardImage FRecipe="@hElement" />
            
        </div>

    }

</div>*@

<div class="masonry-layout" data-masonry='{"percentPosition": true}'>

    @foreach (var hElement in FElements)
    {
        <div class="masonry-layout-panel">

            <RecipeCardImage FRecipe="@hElement" />

        </div>

    }

</div>

<style>

    .masonry-layout {
        column-count: @(ColumnCount() + "");
        column-gap: 0;
    }

    .masonry-layout-panel {
        break-inside: avoid;
        max-width: @((1/ColumnCount()) + "%");
        padding: 5px;
    }

</style>

@code {

    [Parameter]
    public IEnumerable<Recipe> FElements { get; set; }

    //[Parameter]
    //public IEnumerable<RecipeImage> FImages { get; set; }

    [Parameter]
    public int FNumCols { get; set; }

    public int FScreenWidth { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        var hDimension = await BrowserService.GetDimensions();
        FScreenWidth = hDimension.Width;
        
    }

    public int ColumnCount()
    {
        if(FScreenWidth <= 540)
        {
            return 1;
        } else if(FScreenWidth <= 720)
        {
            return 2;
        } else
        {
            return 3;
        }
    }

}
