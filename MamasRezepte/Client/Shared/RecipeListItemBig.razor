
@using AntDesign
@using MamasRezepte.Shared.Models
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

@if (!FLoading)
{
    <ListItem Extra="@FImage" Actions="@(new[] {
                                    IconText(("clock-circle", Recipe.DurationCategory.Name)),
                                    IconText(("eye", Recipe.Clicks.ToString())),
                                    IconText(("calendar", Recipe.PublishDate.ToString()))
                                })">
        <ListItemMeta Description="@Recipe.Subtitle">
            <TitleTemplate>
                <a href="@FLinkToRecipe">@Recipe.Name</a>
            </TitleTemplate>
        </ListItemMeta>
        @Recipe.Instruction.Substring(0, Math.Min(200, Recipe.Instruction.Length));

    </ListItem>
}
else
{
    <Skeleton Loading="true"></Skeleton>
}



@code {

    [Parameter]
    public Recipe Recipe { get; set; }

    private string FLinkToRecipe { get; set; }

    private bool FLoading = true;
    private RenderFragment FImage { get; set; }
    RenderFragment<(string icon, string text)> IconText = context =>@<Template>
        <Space><SpaceItem><Icon Type="@context.icon" /></SpaceItem><SpaceItem>@context.text</SpaceItem></Space>
    </Template>;

protected override async Task OnInitializedAsync()
{
Recipe.Images = (await HttpClient.GetFromJsonAsync<IEnumerable<RecipeImage>>("/api/RecipeImages")).Where(_ => _.RecipeId == Recipe.Id);
Recipe.DurationCategory = (await HttpClient.GetFromJsonAsync<IEnumerable<DurationCategory>>($"/api/DurationCategories")).FirstOrDefault(_ => _.Id == Recipe.DurationCategoryId);

//var hBase64 = Convert.ToBase64String(Recipe.Images.First().ImageData);

//Console.WriteLine(Recipe.Images.First().ImageData);

var hImageSource = String.Format("data:image/jpeg;base64,{0}", Recipe.Images.First().ImageData);
FImage = @<img width="272" alt="image" src="@hImageSource" style="border-radius: 2%" />;
FLinkToRecipe = $"{ NavigationManager.BaseUri }/recipes/{ Recipe.Id }";

FLoading = false;
}

}
