@page "/rezept/{FId:long}"

@using MamasRezepte.Client.State
@using MamasRezepte.Shared.Models
@using System.IO

@implements IDisposable

@inject DataStateDetail State
@inject DataStateEditor EditorState
@inject HttpClient Http
@inject NavigationManager Nav

@if (State.FRecipe != null)
{
    @* Carousel *@
    <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel" style="margin-left:-12px;margin-right:-12px;">
        <div class="carousel-inner">
            @foreach (var hImageData in State.FRecipe.Images)
            {
                var hActive = State.FRecipe.Images.FirstOrDefault() == hImageData;

                <div class="carousel-item @(hActive ? "active" : "")">
                    <img src="@($"data:image/jpeg;base64,{ hImageData.ImageData }")" class="card-img-top" alt="" style="max-height:250px;  object-fit:cover;">
                </div>
            }
        </div>
        <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </a>
    </div>

    @* Badges *@
    <div style="margin-bottom: 12px; margin-top:12px;">
        <div class="badge rounded-pill bg-secondary">@(State.FRecipe.Category.Name)</div>
        <div class="badge rounded-pill bg-secondary">@(State.FRecipe.DurationCategory.Name)</div>
        @foreach (var hTag in State.FRecipe.Tags)
        {
            <div class="badge rounded-pill bg-secondary">@(hTag.Tag.Name)</div>
        }
    </div>

    @* Headline *@
    <div style="margin-bottom: 6px;margin-top:12px;">
        <h1 style="font-weight:bold;">@State.FRecipe.Name</h1>
    </div>

    @* "Subline" *@
    <div style="margin-bottom: 12px;">
        <span class="" style="color:gray; font-size:12px;">@(State.FRecipe.Clicks.Count()) Aufrufe  -  @(State.FRecipe.PublishDate.Date.ToString("d"))</span>
    </div>

    <div style="margin-bottom: 16px;">
        <span style="color:gray;">@(State.FRecipe.Subtitle)</span>
    </div>

    @* Button bar *@
<div class="row justify-content-center" style="margin-bottom: 16px;">
    <a class="col text-center" style="color:gray"><i class="fa fa-thumbs-up fs-3"></i></a>
    <a class="col text-center" style="color:gray"><i class="fa fa-share fs-3"></i></a>
    <a class="col text-center" style="color:gray"><i class="fa fa-download fs-3"></i></a>
    <a @onclick="@(() => EditRecipe())" class="col text-center" style="color:gray"><i class="fa fa-cog fs-3"></i></a>
</div>

    <div style="border-top: 1px solid grey; margin-left:-12px; margin-right:-12px; margin-bottom:16px;">
    </div>

    @* Ingredients *@
    <div class="row">
        <h3>Zutaten für <a @onclick="@(() => EditNumPersons(-1))" style="color:orange; margin:4px;"><i class="fa fa-minus"></i></a> @FNumPersons <a @onclick="@(() => EditNumPersons(1))" style="color:orange; margin:4px;"><i class="fa fa-plus"></i></a> Personen</h3>
    </div>
    <div class="row justify-content-center" style="margin-bottom:32px;">
        <div class="col">
            <ul class="list-group list-group-flush">
                @foreach (var hIngredient in State.FRecipe.Ingredients)
                {
                    <li class="list-group-item row">
                        <div class="col-2"></div>
                        <div class="col">
                            <input class="form-check-input me-1" type="checkbox" value="" aria-label="">
                            <a>@($"{ hIngredient.Amount * FNumPersons / State.FRecipe.NumberOfPersons  } { hIngredient.Unit } { hIngredient.Product.Name }")</a>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>

    <div style="border-top: 1px solid grey; margin-left:-12px; margin-right:-12px; margin-bottom:16px;">
    </div>

    @* Instruction *@
    <h3>Zubereitung</h3>
    @foreach(var hParagraph in State.FRecipe.Instruction.Split("\n"))
    {
        <p class="text-break">@hParagraph</p>
    }
}



@code {

    [Parameter]
    public long FId { get; set; }

    public int FNumPersons { get; set; }

    protected override void OnInitialized()
    {
        State.OnChange += StateHasChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        // get recipe
        var hRecipe = await Http.GetFromJsonAsync<Recipe>(Path.Combine(Nav.BaseUri, "api/recipes", FId + ""));

        // add click
        await Http.PostAsJsonAsync<Click>(Path.Combine(Nav.BaseUri, "api/clicks"), new Click { RecipeId = hRecipe.Id, Time = DateTime.Now });

        State.SetRecipe(hRecipe);
        FNumPersons = hRecipe.NumberOfPersons;

        this.StateHasChanged();
    }


    public void EditNumPersons(int _Add)
    {
        FNumPersons += _Add;
        this.StateHasChanged();
    }

    public void EditRecipe()
    {
        EditorState.SetRecipe(State.FRecipe);
        Nav.NavigateTo(Path.Combine(Nav.BaseUri, "/editor"));
    }

    public void Dispose()
    {
        State.OnChange -= StateHasChanged;
    }

}
